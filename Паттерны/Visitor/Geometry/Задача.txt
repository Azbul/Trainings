1. »зучите Task.cs. ѕроблема в том, что каждый раз при добавлении новой фигуры придетс€ мен€ть метод в базовом классе.

2. Ўаблон Visitor. ќпределите интерфейс IVisitor и реализуйте его в двух классах DimensionsVisitor и SurfaceAreaVisitor, дл€ рассчЄта размеров (ширина, высота) и площади поверхности фигур.

¬ класс Body добавьте абстрактный метод Accept(IVisitor visitor).

јвтоматизированные тесты провер€ют лишь базовые требовани€. ѕроверить, что вы всЄ сделали правильно можно самосто€тельно так:

¬ реализаци€х Visitor не должно быть ни одного приведени€ типов и ни одного if-а. »менно этой простотой решение с Visitor-ом лучше исходного с длинным if-else.
–абота с каждой фигурой должна оказатьс€ в отдельном методе. ј значит даже если добавитс€ нова€ фигура, будет меньше возможностей случайно внести ошибку в обработку старых фигур.
 омпил€тор должен контролировать, что вы не забыли обработать ни одну из фигур: если вы забудете написать один из методов, программа даже не скомпилируетс€.
¬ интерфейсе IVisitor, в классе Body и всех его подклассах не должно быть никакого упоминани€ площади поверхности, размеров или конкретных классов Visitor-ов. ј значит при добавлении новых методов, эти классы не нужно будет трогать.
ƒл€ добавлени€ нового метода работы с фигурами, должно быть достаточно добавить новый класс Visitor-а.